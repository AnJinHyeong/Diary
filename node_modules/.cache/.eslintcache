[{"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/index.js":"1","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/App.js":"2","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Edit.js":"3","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Login.js":"4","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Join.js":"5","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/New.js":"6","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DlSection .js":"7","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/TopLine.js":"8","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DrSection.js":"9","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/Section.js":"10","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryDate.js":"11","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryEditor.js":"12","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryList.js":"13","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Home.js":"14","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/EmotionItem.js":"15","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/utils/emotion.js":"16","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/utils/date.js":"17","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryButton.js":"18","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Diary.js":"19","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryItem.js":"20","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/Footer.js":"21","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/data/Data.js":"22","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryDetail.js":"23","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryLikeItem.js":"24","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/data/UserData.js":"25","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/Firebase.js":"26","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/firebase.js":"27"},{"size":220,"mtime":1651508848819,"results":"28","hashOfConfig":"29"},{"size":7111,"mtime":1651645257741,"results":"30","hashOfConfig":"29"},{"size":1340,"mtime":1651570395316,"results":"31","hashOfConfig":"29"},{"size":4651,"mtime":1652068621127,"results":"32","hashOfConfig":"29"},{"size":6133,"mtime":1652184501270,"results":"33","hashOfConfig":"29"},{"size":680,"mtime":1651570445745,"results":"34","hashOfConfig":"29"},{"size":1051,"mtime":1651571855456,"results":"35","hashOfConfig":"29"},{"size":279,"mtime":1650264039403,"results":"36","hashOfConfig":"29"},{"size":4112,"mtime":1651569333012,"results":"37","hashOfConfig":"29"},{"size":909,"mtime":1651645048624,"results":"38","hashOfConfig":"29"},{"size":343,"mtime":1648710653594,"results":"39","hashOfConfig":"29"},{"size":3646,"mtime":1651557589892,"results":"40","hashOfConfig":"29"},{"size":858,"mtime":1651571640114,"results":"41","hashOfConfig":"29"},{"size":689,"mtime":1651570440781,"results":"42","hashOfConfig":"29"},{"size":443,"mtime":1651040780487,"results":"43","hashOfConfig":"29"},{"size":849,"mtime":1649314953684,"results":"44","hashOfConfig":"29"},{"size":85,"mtime":1650264350124,"results":"45","hashOfConfig":"29"},{"size":169,"mtime":1649311669273,"results":"46","hashOfConfig":"29"},{"size":726,"mtime":1651570388627,"results":"47","hashOfConfig":"29"},{"size":1515,"mtime":1651568525881,"results":"48","hashOfConfig":"29"},{"size":604,"mtime":1651574932939,"results":"49","hashOfConfig":"29"},{"size":523,"mtime":1651476990075,"results":"50","hashOfConfig":"29"},{"size":2457,"mtime":1651568639590,"results":"51","hashOfConfig":"29"},{"size":635,"mtime":1651571416907,"results":"52","hashOfConfig":"29"},{"size":348,"mtime":1651507302852,"results":"53","hashOfConfig":"29"},{"size":472,"mtime":1651157361742,"results":"54","hashOfConfig":"29"},{"size":1080,"mtime":1651824676291,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8h6d3s",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"126"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"126"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/index.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/App.js",["154","155"],[],"import React, { useCallback, useEffect, useState } from 'react';\nimport { useReducer, useRef } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport './css/Diary.css';\nimport './css/Info.css'\n\nimport Home from './pages/Home';\nimport Join from './pages/Join';\nimport Login from './pages/Login';\nimport Edit from './pages/Edit';\nimport New from './pages/New';\nimport Diary from './pages/Diary';\n\nimport { firestore } from './firebase';\n\n\n//다이어리 관리\nconst reducer = (state, action) => {\n\n  let newState = [];\n\n  switch(action.type){\n    case 'INIT' : {\n      return action.data;\n    }\n    case 'CREATE' : {\n      firestore.collection(\"diary\").doc(`diary-${action.data.userId}-${action.data.id}`).set({\n        id : action.data.id,\n        date : action.data.date,\n        content : action.data.content,\n        emotion : action.data.emotion,\n        likeDay : action.data.likeDay,\n        userId : action.data.userId\n      });\n      newState = [action.data, ...state];\n      break;\n    }\n    case 'REMOVE' : {\n      firestore.collection(\"diary\").doc(`diary-${action.data.userId}-${action.data.id}`).delete();\n\n      newState = state.filter((it) => it.id !== action.data.id);\n      break;\n    }\n    case 'EDIT' : {\n      firestore.collection(\"diary\").doc(`diary-${action.data.userId}-${action.data.id}`).set({\n        id : action.data.id,\n        date : action.data.date,\n        content : action.data.content,\n        emotion : action.data.emotion,\n        likeDay : action.data.likeDay,\n        userId : action.data.userId\n      });\n      newState = state.map((it) => it.id === action.data.id ? { ...action.data } : it);\n      break;\n    }\n    case 'ONLIKE' : {\n      firestore.collection(\"diary\").doc(`diary-${action.data.userId}-${action.data.id}`).set({\n        id : action.data.id,\n        date : action.data.date,\n        content : action.data.content,\n        emotion : action.data.emotion,\n        likeDay : action.data.likeDay,\n        userId : action.data.userId\n      });\n\n      newState = state.map((it) => it.id === action.data.id ? {...it, ...action.data} : it );\n      break;\n    }\n    case 'OFFLIKE' :{\n      firestore.collection(\"diary\").doc(`diary-${action.data.userId}-${action.data.id}`).set({\n        id : action.data.id,\n        date : action.data.date,\n        content : action.data.content,\n        emotion : action.data.emotion,\n        likeDay : action.data.likeDay,\n        userId : action.data.userId\n      });\n\n      newState = state.map((it) => it.id === action.data.id ? {...it, ...action.data} : it);\n      break;\n    }\n    case 'RESET' :{\n      return newState = [];\n    }\n    default :\n      return state;\n  }\n\n  return newState;\n}\n\n//회원 관리\nconst userReducer = (state, action) => {\n\n  let newState = [];\n\n  switch(action.type){\n    case 'JOIN' : {\n      firestore.collection(\"user\").add({\n        userSeq : action.data.userSeq,\n        userId : action.data.userId,\n        userPw : action.data.userPw,\n        userNick : action.data.userNick,\n        userName : action.data.userName,\n      });\n      newState = [action.data, ...state];\n      break;\n    }\n    default :\n      return state;\n  }\n\n  return newState;\n}\n\nexport const DiaryStateContext = React.createContext();\nexport const DiaryDispatchContext = React.createContext();\nexport const UserDispatchContext = React.createContext();\n\nfunction App() {\n\n  const [userCheck, setUserCheck] = useState(\"\");\n  const [data, dispatch] = useReducer(reducer, []);\n  const [userData, userDispatch] = useReducer(userReducer, []);\n  const dataId = useRef(0);\n  const userSeq = useRef(0);\n\n\n  const userSession = () => {\n    \n    const sessionUser = sessionStorage.getItem('userId');\n    if(sessionUser !== null){\n      setUserCheck(sessionStorage.getItem('userId'));\n    }\n    else{\n      setUserCheck(\"\");\n    }\n\n  }\n\n\n\n  async function diaryListDB(){\n    let diaryList = [];\n    const userId = sessionStorage.getItem('userId');\n    const diarys = firestore.collection(\"diary\").where(\"userId\", \"==\", userId);\n\n    await diarys.get().then(async (snapshot) => {\n\n      if (snapshot) {\n        snapshot.forEach((doc) => {\n            let docs = doc.data();\n            diaryList.push(docs);\n        });\n\n        if(diaryList.length > 0){\n          diaryList.sort((a,b) => parseInt(b.id) - parseInt(a.id));\n          dataId.current = diaryList[0].id + 1;\n        }\n        dispatch({type : \"INIT\", data : diaryList});\n      }\n\n    });\n\n  }\n\n  useEffect(() => {\n      diaryListDB();\n  },[]);\n\n  useEffect(() => {\n    if(userCheck.length > 0){\n      diaryListDB();\n    }\n  },[userCheck]);\n\n\n  //CREATE\n  const onCreate = (date, content, emotion, likeDay, userId) => {\n    dispatch({\n      type : \"CREATE\", \n      data : {\n        id : dataId.current,\n        date : new Date(date).getTime(),\n        content,\n        emotion,\n        likeDay,\n        userId\n      },\n    });\n    dataId.current += 1;\n  }\n  //REMOVE\n  const onRemove = (id, userId) => {\n    dispatch({\n      type : \"REMOVE\", \n      data : {\n        id : id,\n        userId : userId\n      }\n    });\n  }\n  //EDIT\n  const onEdit = (targetId, date, content, emotion, likeDay, userId) => {\n    dispatch({\n      type : \"EDIT\",\n      data : { \n        id : targetId,\n        date : new Date(date).getTime(),\n        content,\n        emotion,\n        likeDay,\n        userId\n      }\n    });\n  }\n  //ONLIKE\n  const onLike = (id,date,content,emotion, userId) => {\n    dispatch({\n      type : \"ONLIKE\",\n      data : {\n        id : Number(id),\n        date : date,\n        content : content,\n        emotion : emotion,\n        userId : userId,\n        likeDay : 1\n      }\n    });\n  }\n  //OFFLIKE\n  const offLike = (id,date,content,emotion, userId) => {\n    dispatch({\n      type : \"OFFLIKE\",\n      data : {\n        id : Number(id),\n        date : date,\n        content : content,\n        emotion : emotion,\n        userId : userId,\n        likeDay : 0\n      }\n    });\n  }\n  //RESET\n  const reset = () => {\n    dispatch({type : \"RESET\"});\n  }\n  //JOIN\n  const userJoin = (userName, userNick, userId, userPw) => {\n    userDispatch({\n      type : 'JOIN',\n      data : {\n        userSeq : userSeq.current,\n        userName : userName,\n        userNick : userNick,\n        userId : userId,\n        userPw : userPw\n      }\n    });\n    userSeq.current += 1;\n  }\n\n  return (\n    \n    <DiaryStateContext.Provider value={data}>\n      <DiaryDispatchContext.Provider value={{reset ,userSession, onCreate, onRemove, onEdit, onLike, offLike, userJoin}}>\n        <BrowserRouter>\n          <div className=\"App\">\n            <Routes>\n              <Route path=\"/\" element={<Login />}/>\n              <Route path=\"/join\" element={<Join />}/>\n              <Route path=\"/home\" element={<Home />}/>\n              <Route path=\"/new\" element={<New />}/>\n              <Route path='/diary/:id' element={<Diary />}/>\n              <Route path=\"/edit/:id\" element={<Edit />}/>\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </DiaryDispatchContext.Provider>\n    </DiaryStateContext.Provider>\n\n  );\n}\n\nexport default App;\n","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Edit.js",["156","157"],[],"import { useContext, useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryStateContext } from \"../App\";\nimport Section from \"../components/Section\";\n\nconst Edit = () => {\n\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const diaryList = useContext(DiaryStateContext);\n    const [originData, setOriginData] = useState();\n    const user = sessionStorage.getItem('userId');\n\n    useEffect(() => {\n      const titleElement = document.getElementsByTagName('title')[0];\n      titleElement.innerHTML = `DAILY DIARY - ${id} diary edit`\n    },[]);\n\n    useEffect(() => {\n\n        if(user === null){\n            alert('로그인 후 이용이 가능합니다.');\n            navigate('/', {replace: true});\n        }\n    \n        if(diaryList.length >= 1){\n          const targetDiary = diaryList.find((it) => parseInt(it.id) === parseInt(id));\n\n          if(targetDiary){\n            setOriginData(targetDiary);\n          } else {\n            alert(\"없는 일기 입니다.\");\n            navigate('/home', {replace : true});\n          }\n        }\n    \n    }, [id, diaryList]);\n    \n    return (\n        <div className=\"Edit\">\n            {originData && <Section pageView={\"edit\"} isEdit={true} originData={originData} />}\n        </div>\n    );\n\n}\n\nexport default Edit;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Login.js",["158","159","160"],[],"import { useContext, useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { firestore, auth, loginGoogle, loginFacebook } from \"../firebase\";\n\nconst Login = () => {\n\n\n    const {userSession} = useContext(DiaryDispatchContext);\n    const navigator = useNavigate();\n    const [loginId, setLoginId] = useState(\"\");\n    const [loginPw, setLoginPw] = useState(\"\");\n\n    const googleLoginBtn = () => {\n        \n        loginGoogle().then((result) => {\n            sessionStorage.setItem('userId', result._tokenResponse.email.split('@')[0] + '[G]');\n            sessionStorage.setItem('userNick', result._tokenResponse.email.split('@')[0] + '[G]');\n            userSession();\n            navigator('/home', {replace:true});\n        });\n\n    };\n\n    const facebookLoginBtn = () => {\n        \n        loginFacebook().then((result) => {\n            // console.log(result);\n            sessionStorage.setItem('userId', result.user.email.split('@')[0] + '[F]');\n            sessionStorage.setItem('userNick', result.user.email.split('@')[0] + '[F]');\n            userSession();\n            navigator('/home', {replace:true});\n        });\n\n    };\n\n    useEffect(() => {\n        const titleElement = document.getElementsByTagName('title')[0];\n        titleElement.innerHTML = 'DAILY DIARY';\n    },[]);\n\n    const loginSubmit = () => {\n\n        const users = firestore.collection(\"user\");\n        const userList = [];\n        users.get().then((snapshot) => {\n            \n            if (snapshot) {\n                snapshot.forEach((doc) => {\n                    let docs = doc.data();\n                    userList.push(docs);\n                });\n\n                const userCheck = userList.filter((it) => it.userId === loginId);\n\n                if(userCheck.length > 0){\n                    if(userCheck[0].userId === loginId && userCheck[0].userPw === loginPw){\n                        sessionStorage.setItem('userId', userCheck[0].userId);\n                        sessionStorage.setItem('userNick', userCheck[0].userNick);\n                        userSession();\n                        navigator('/home', {replace:true});\n                    }\n                    else{\n                        alert(\"아이디와 비밀번호를 확인해주세요.\");\n                        setLoginId(\"\");\n                        setLoginPw(\"\");\n                    }\n                }\n                else {\n                    alert(\"아이디와 비밀번호를 확인해주세요.\");\n                    setLoginId(\"\");\n                    setLoginPw(\"\");\n                }\n            } \n        });\n    }\n\n    return (\n        <div className=\"Login\">\n            <div className=\"inner_box\">\n                <div className=\"inner_title\">\n                    <h2>DAILY DIARY</h2>\n                </div>\n                <div className=\"inner_section\">\n                    <div className=\"is_box\">\n                        <div className=\"input_box\">\n                            <label className=\"input_label\">\n                                <input type=\"text\" placeholder=\"ID\" onChange={(e) => setLoginId(e.target.value)} value={loginId} />\n                            </label>\n                            <label className=\"input_label\">\n                                <input type=\"password\" placeholder=\"PASSWORD\" onChange={(e) => setLoginPw(e.target.value)} value={loginPw} />\n                            </label>\n                            <button className=\"input_btn\" onClick={loginSubmit}>Log in</button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"other_line\">\n                    <div className=\"other_left\"></div>\n                    <div className=\"other_center\">other</div>\n                    <div className=\"other_right\"></div>\n                </div>\n                <div className=\"inner_bottom\">\n                    <ul>\n                        <li><img src={process.env.PUBLIC_URL + 'assets/img/logo/google.jpeg'} className=\"other_logo\" onClick={googleLoginBtn}/></li>\n                        <li><img src={process.env.PUBLIC_URL + 'assets/img/logo/facebook.webp'} className=\"other_logo\" onClick={facebookLoginBtn} /></li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"inner_box2\">\n                <div className=\"inner_title2\">\n                    <h2 className=\"inner_txt\">계정이 없으신가요? <Link to={\"/join\"}><span>Join us</span></Link></h2>\n                </div>\n            </div>\n        </div>\n    );\n\n}\n\nexport default Login;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Join.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/New.js",["161"],[],"import React, {useEffect} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Section from \"../components/Section\";\n\nconst New = () => {\n\n    const navigate = useNavigate();\n    const user = sessionStorage.getItem('userId');\n\n    useEffect(() => {\n\n        if(user === null){\n            alert('로그인 후 이용이 가능합니다.');\n            navigate('/', {replace: true});\n        }\n\n        const titleElement = document.getElementsByTagName('title')[0];\n        titleElement.innerHTML = `DAILY DIARY - new diary`\n    },[])\n\n    return(\n        <div className=\"New\">\n            <Section pageView={\"new\"}/>\n        </div>\n    );\n\n}\n\nexport default New;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DlSection .js",["162","163"],[],"import { useContext } from \"react\";\nimport { DiaryStateContext } from \"../App\";\nimport DiaryLikeItem from \"./DiaryLikeItem\";\n\nconst DlSection = ({diaryList}) => {\n\n    const userNickName = sessionStorage.getItem('userNick');\n    \n    const getProcessedDiaryList = () => {\n        const sortedList = diaryList.sort((a,b) => parseInt(a.date) - parseInt(b.date));\n        return sortedList;\n    };\n\n    return (\n        <div>\n            <div className=\"DlHeader\">\n                {\n                    userNickName !== null ?\n                    <h2>{userNickName + `'s DIARY`}</h2> : null\n                }\n            </div>\n            <div className=\"DlSection\">\n                <ul>\n                    {\n                        getProcessedDiaryList().map((it) => it.likeDay === 1 ? (\n                            <DiaryLikeItem key={it.id} id={it.id} date={it.date} content={it.content}/> \n                        ) : null)\n                    }\n                </ul>\n            </div>\n        </div>\n        \n    );\n\n}\n\nexport default DlSection;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/TopLine.js",[],[],["164","165"],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DrSection.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/Section.js",["166","167"],[],"import TopLine from \"../components/TopLine\";\nimport DlSection from \"../components/DlSection \";\nimport DrSection from \"./DrSection\";\nimport Footer from \"./Footer\";\nimport { useContext, useEffect } from \"react\";\nimport { DiaryDispatchContext, DiaryStateContext } from \"../App\";\n\nconst Section = ({pageView, isEdit, originData}) => {\n\n    const diaryList = useContext(DiaryStateContext);\n\n    return (\n        <div className=\"Section\">\n            <TopLine />\n            <div className=\"dMain\">\n                <div className=\"dM-l\">\n                    {diaryList && <DlSection diaryList={diaryList}/>}\n                </div>\n                <div className=\"dM-r\">\n                    {diaryList && <DrSection pageView={pageView} isEdit={isEdit} originData={originData} diaryList={diaryList} />}\n                </div>\n            </div>\n            <Footer />\n        </div>\n    );\n\n}\n\nexport default Section;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryDate.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryEditor.js",["168","169"],[],"import { useCallback, useContext, useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryDispatchContext } from \"../App\";\n\nimport EmotionItem from \"../components/EmotionItem\";\n\nimport { getStringDate } from \"../utils/date\";\nimport { emotionList } from \"../utils/emotion\";\n\nconst DiaryEditor = ({ pageView, isEdit, originData }) => {\n\n    \n    const navigate = useNavigate();\n    const contentRef = useRef();\n\n    const [date, setDate] = useState(getStringDate(new Date()));\n    const [emotion, setEmotion] = useState(3);\n    const [content, setContent] = useState(\"\");\n    const [likeDay, setLikeDay] = useState(0);\n    const [userId, setUserId] = useState(sessionStorage.getItem('userId'));\n\n    const { onCreate, onEdit } = useContext(DiaryDispatchContext);\n\n    const handleClickEmote = useCallback((emotion) => {\n        setEmotion(emotion);\n    },[]);\n\n    const likeBtn = () => {\n        if(likeDay === 0) setLikeDay(1);\n        else setLikeDay(0);\n    }\n\n    const handleSubmit = () => {\n        if(content.length < 1){\n            contentRef.current.focus();\n            return;\n        }\n\n        // if(window.confirm(isEdit ? \"일기를 수정하시겠습니까?\" : \"새로운 일기를 작성하시겠습니까?\")){\n        if(!isEdit){\n            onCreate(date, content, emotion, likeDay, userId);\n        } else {\n            onEdit(originData.id, date, content, emotion, likeDay, userId);\n        }\n        // }\n        navigate('/home', {replace : true});\n    }\n\n    useEffect(() => {\n        if(isEdit){\n            setDate(getStringDate(new Date(originData.date)));\n            setEmotion(originData.emotion);\n            setContent(originData.content);\n            setLikeDay(originData.likeDay);\n        }\n\n    }, [isEdit, originData]);\n\n\n \n    return (\n        <div className=\"DiaryEditor\">\n            <div className=\"DE_header\">\n                { pageView === \"new\" ? <h2>NEW DIARY</h2> : <h2>EDIT DIARY</h2> }\n                {\n                    likeDay === 0 ? \n                    <i className=\"fa-regular fa-heart unlikeDay_btn like_btn\" onClick={likeBtn}></i> : \n                    <i className=\"fa-solid fa-heart likeDay_btn like_btn\" onClick={likeBtn}></i> \n                }\n            </div>\n            <div className=\"DE_section\">\n                <label>Today Date</label>\n                <div className=\"DE_inner_date\">\n                    <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n                </div>\n            </div>\n            <div className=\"DE_section\">\n                <label>Today Emotion</label>\n                <div className=\"DE_inner_emotion\">\n                    <div className=\"input_box emotion_list_wrapper\">\n                        {emotionList.map((it) => (\n                            <EmotionItem key={it.emotion_id} {...it} onClick={handleClickEmote} isSelected={it.emotion_id === emotion}/>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <div className=\"DE_section\">\n                <label>Today Life</label>\n                <div className=\"DE_inner_life\">\n                    <textarea ref={contentRef} placeholder={\"How was your day?\"}  value={content} onChange={(e) =>{setContent(e.target.value)}}>{content}</textarea>\n                </div>\n            </div>\n            <div className=\"DE_section\">\n                <div className=\"DE_inner_btn\">\n                    <button onClick={handleSubmit}>Write</button>   \n                </div>\n            </div>\n        </div>\n    );\n    \n\n}\n\nexport default DiaryEditor;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryList.js",["170"],[],"import React, { useState } from 'react';\nimport DiaryItem from './DiaryItem';\n\nconst DiaryList = ( { diaryList } ) => {\n\n    const getProcessedDiaryList = () => {\n        const sortedList = diaryList.sort((a,b) => parseInt(a.date) - parseInt(b.date));\n        return sortedList;\n    };\n\n    return (\n        <div className=\"DiaryList\">\n            {\n                diaryList.length === 0 \n                ? \n                <div className='diary-zero'>오늘 하루를 기록해 보세요..🌼</div>\n                :    \n                getProcessedDiaryList().map((it) => (\n                    <DiaryItem key={it.id} id={it.id} content={it.content} emotion={it.emotion} date={it.date} likeDay={it.likeDay}/> \n                ))\n            }\n        </div>\n    );\n}\n\nDiaryList.defaultProps = {\n    diaryList : [],\n}\n\nexport default React.memo(DiaryList);",["171","172"],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Home.js",["173","174"],[],"import React, {useContext, useEffect} from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Section from \"../components/Section\";\n\nconst Home = () => {\n\n    const navigate = useNavigate();\n    const user = sessionStorage.getItem('userId');\n\n    useEffect(() => {\n\n        if(user === null){\n            alert('로그인 후 이용이 가능합니다.');\n            navigate('/', {replace: true});\n        }\n\n        const titleElement = document.getElementsByTagName('title')[0];\n        titleElement.innerHTML = `DAILY DIARY`\n    },[]);\n\n\n    return (\n        <div className=\"Home\">\n            <Section pageView={\"list\"} />\n        </div>\n\n    );\n\n}\n\nexport default Home;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/EmotionItem.js",["175"],[],"import React from \"react\";\n\nconst EmotionItem = React.memo(({emotion_id, emotion_img, emotion_descript, onClick, isSelected}) => {\n\n    return (\n        <div className={[\"EmotionItem\", isSelected ? `EmotionItem_on_${emotion_id}` : \"EmotionItem_off\"].join(\" \")} \n        onClick={() => onClick(emotion_id)}>\n            <img src={emotion_img}/>\n            <span>{emotion_descript}</span>\n        </div>\n    );\n\n});\n\nexport default EmotionItem;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/utils/emotion.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/utils/date.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryButton.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/pages/Diary.js",["176"],[],"import { useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport Section from \"../components/Section\";\n\nconst Diary = () => {\n\n    const {id} = useParams();\n    const navigate = useNavigate();\n    const user = sessionStorage.getItem('userId');\n\n    useEffect(() => {\n        if(user === null){\n            alert('로그인 후 이용이 가능합니다.');\n            navigate('/', {replace: true});\n        }\n\n        const titleElement = document.getElementsByTagName('title')[0];\n        titleElement.innerHTML = `DAILY DIARY - ${id} diary`\n    },[])\n\n    return (\n        <div className=\"Diary\">\n            <Section pageView={\"diary\"}/>\n        </div>\n    );\n\n}\n\nexport default Diary;",["177","178"],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryItem.js",["179"],[],"import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DiaryDispatchContext } from \"../App\";\n\nconst DiaryItem = ({id,date,content,emotion,likeDay}) => {\n\n\n    const userId = sessionStorage.getItem('userId');\n    const strDate = new Date(parseInt(date)).toLocaleDateString().slice(0, -1);\n    const navigate = useNavigate();\n    const { onLike, offLike } = useContext(DiaryDispatchContext);\n    \n    const goDetail = () => {\n        navigate(`/diary/${id}`);\n    };\n\n    return (\n        <div className=\"DiaryItem\">\n            <div className={[\"emotion_img_wrapper\", `emotion_img_wrapper_${emotion}`].join(\" \")} onClick={goDetail}>\n                <img src={process.env.PUBLIC_URL + `assets/emotion/emotion${emotion}.png`} />\n            </div>\n            <div className=\"info_wrapper\" onClick={goDetail}>\n                <div className=\"diary_date\">{strDate}</div>\n                <div className=\"diary_content\">{content.length >= 25 ? content.slice(0,25)+'...' : content}</div>\n            </div>\n            <div className=\"btn_wrapper\">\n                {\n                    likeDay === 0 ? \n                    <i className=\"fa-regular fa-heart unlikeDay_btn\" onClick={() => onLike(id,date,content,emotion,userId)} />\n                    :\n                    <i className=\"fa-solid fa-heart likeDay_btn\" onClick={() => offLike(id,date,content,emotion,userId)} />\n                }\n            </div>\n        </div>\n    );\n\n}\n\nexport default React.memo(DiaryItem);","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/Footer.js",["180"],[],"import { useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { DiaryDispatchContext } from \"../App\";\n\nconst Footer = () => {\n\n    const {userSession, reset} = useContext(DiaryDispatchContext);\n    const navigate = useNavigate();\n\n    const loginBtn = () => {\n        sessionStorage.clear();\n        reset();\n        userSession();\n        navigate('/', {replace: true});\n    }\n\n    return (\n        <div className=\"Footer\" onClick={loginBtn}>\n            <img src={`${process.env.PUBLIC_URL}/assets/img/file/exit.png`} />\n        </div>\n    );\n    \n}\n\nexport default Footer;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/data/Data.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryDetail.js",["181","182"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { DiaryDispatchContext, DiaryStateContext } from \"../App\";\nimport { getStringDate } from \"../utils/date\";\n\nimport { emotionList } from \"../utils/emotion\";\n\n\nconst DiaryDetail = () => {\n\n    const diaryList = useContext(DiaryStateContext);\n    const { onLike, offLike } = useContext(DiaryDispatchContext);\n    const {id} = useParams();\n\n    const userId = sessionStorage.getItem('userId');\n    const [data, setData] = useState();\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if(diaryList.length >= 1){\n            const targetDiary = diaryList.find((it) => parseInt(it.id) === parseInt(id));\n\n            if(targetDiary){\n                setData(targetDiary);\n            } else {\n                alert(\"없는 일기 입니다.\");\n                navigate('/home' , {replace : true});\n            }\n        }\n\n    }, [id, diaryList]);\n    \n    if(!data){\n        return <div className=\"DiaryView\">Loding...</div>\n    } else {\n\n        const emotionImg = emotionList.find((it) => it.emotion_id === data.emotion );\n\n        return (\n            <div className=\"DiaryView\">\n                <div className=\"DV_inner\">\n                    <div className=\"DV_inner_img\">\n                        <div className={[\"diary_img_wrapper\", `diary_img_wrapper_${data.emotion}`].join(\" \")}>\n                            <img src={emotionImg.emotion_img} />\n                        </div>\n                    </div>\n                    <div className=\"DV_inner_info\">\n                        {\n                            data.likeDay === 0 ? \n                            <i className=\"fa-regular fa-heart unlikeDay_btn\" onClick={() => onLike(id,data.date,data.content,data.emotion,userId)} /> \n                            : \n                            <i className=\"fa-solid fa-heart likeDay_btn\" onClick={() => offLike(id,data.date,data.content,data.emotion,userId)} />\n                        }\n                        <div className=\"diary_date\">{getStringDate(new Date(data.date))}</div>\n                    </div>\n                </div>\n                <div className=\"DV_inner\">\n                    <div className=\"DV_inner_content\">\n                        <pre>{data.content}</pre>\n                    </div>\n                </div>\n            </div>\n            \n        );\n    }\n\n}\n\nexport default DiaryDetail;","/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/components/DiaryLikeItem.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/data/UserData.js",["183"],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/Firebase.js",[],[],"/Users/anjinhyeong/vsc_workspace/project/DailyDiary/src/firebase.js",[],[],{"ruleId":"184","severity":1,"message":"185","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":28},{"ruleId":"184","severity":1,"message":"188","line":125,"column":10,"nodeType":"186","messageId":"187","endLine":125,"endColumn":18},{"ruleId":"189","severity":1,"message":"190","line":17,"column":7,"nodeType":"191","endLine":17,"endColumn":9,"suggestions":"192"},{"ruleId":"189","severity":1,"message":"193","line":37,"column":8,"nodeType":"191","endLine":37,"endColumn":23,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"195","line":4,"column":21,"nodeType":"186","messageId":"187","endLine":4,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":104,"column":29,"nodeType":"198","endLine":104,"endColumn":144},{"ruleId":"196","severity":1,"message":"197","line":105,"column":29,"nodeType":"198","endLine":105,"endColumn":149},{"ruleId":"189","severity":1,"message":"193","line":19,"column":7,"nodeType":"191","endLine":19,"endColumn":9,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"200","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":20},{"ruleId":"184","severity":1,"message":"201","line":2,"column":10,"nodeType":"186","messageId":"187","endLine":2,"endColumn":27},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","replacedBy":"205"},{"ruleId":"184","severity":1,"message":"206","line":5,"column":22,"nodeType":"186","messageId":"187","endLine":5,"endColumn":31},{"ruleId":"184","severity":1,"message":"207","line":6,"column":10,"nodeType":"186","messageId":"187","endLine":6,"endColumn":30},{"ruleId":"184","severity":1,"message":"208","line":2,"column":23,"nodeType":"186","messageId":"187","endLine":2,"endColumn":32},{"ruleId":"184","severity":1,"message":"209","line":20,"column":20,"nodeType":"186","messageId":"187","endLine":20,"endColumn":29},{"ruleId":"184","severity":1,"message":"210","line":1,"column":17,"nodeType":"186","messageId":"187","endLine":1,"endColumn":25},{"ruleId":"202","replacedBy":"211"},{"ruleId":"204","replacedBy":"212"},{"ruleId":"184","severity":1,"message":"200","line":1,"column":16,"nodeType":"186","messageId":"187","endLine":1,"endColumn":26},{"ruleId":"189","severity":1,"message":"193","line":19,"column":7,"nodeType":"191","endLine":19,"endColumn":9,"suggestions":"213"},{"ruleId":"196","severity":1,"message":"197","line":8,"column":13,"nodeType":"198","endLine":8,"endColumn":37},{"ruleId":"189","severity":1,"message":"214","line":19,"column":7,"nodeType":"191","endLine":19,"endColumn":9,"suggestions":"215"},{"ruleId":"202","replacedBy":"216"},{"ruleId":"204","replacedBy":"217"},{"ruleId":"196","severity":1,"message":"197","line":20,"column":17,"nodeType":"198","endLine":20,"endColumn":94},{"ruleId":"196","severity":1,"message":"197","line":19,"column":13,"nodeType":"198","endLine":19,"endColumn":79},{"ruleId":"189","severity":1,"message":"218","line":31,"column":8,"nodeType":"191","endLine":31,"endColumn":23,"suggestions":"219"},{"ruleId":"196","severity":1,"message":"197","line":44,"column":29,"nodeType":"198","endLine":44,"endColumn":65},{"ruleId":"184","severity":1,"message":"206","line":1,"column":10,"nodeType":"186","messageId":"187","endLine":1,"endColumn":19},"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'userData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has missing dependencies: 'navigate' and 'user'. Either include them or remove the dependency array.",["221"],"'auth' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["222"],"'useContext' is defined but never used.","'DiaryStateContext' is defined but never used.","no-native-reassign",["223"],"no-negated-in-lhs",["224"],"'useEffect' is defined but never used.","'DiaryDispatchContext' is defined but never used.","'useParams' is defined but never used.","'setUserId' is assigned a value but never used.","'useState' is defined but never used.",["223"],["224"],["225"],"React Hook useEffect has missing dependencies: 'id', 'navigate', and 'user'. Either include them or remove the dependency array.",["226"],["223"],["224"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["227"],{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},"Update the dependencies array to be: [id]",{"range":"239","text":"240"},"Update the dependencies array to be: [id, diaryList, user, navigate]",{"range":"241","text":"242"},"Update the dependencies array to be: [navigate, user]",{"range":"243","text":"244"},{"range":"245","text":"244"},"Update the dependencies array to be: [id, navigate, user]",{"range":"246","text":"247"},"Update the dependencies array to be: [id, diaryList, navigate]",{"range":"248","text":"249"},[613,615],"[id]",[1093,1108],"[id, diaryList, user, navigate]",[524,526],"[navigate, user]",[525,527],[563,565],"[id, navigate, user]",[955,970],"[id, diaryList, navigate]"]